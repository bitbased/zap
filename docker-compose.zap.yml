# docker compose -f docker-compose.zap.yml -p vortex-zap up --build -d
# Ensure a .env file exists in the project root with ZAP and HF_HUB_TOKEN secrets
services:
  server:
    env_file:
      - .env
    container_name: vortex-zap-server
    image: zap-server
    build:
      context: .
      dockerfile: Dockerfile.zap
      args:
        INSTALL_ALL: "true"
        INSTALL_NGINX: "true"
        ZAP_PORT: ${ZAP_PORT}
        ZAP_CONFIG: ${ZAP_CONFIG}
        ZAP_USERNAME: ${ZAP_USERNAME}
        ZAP_PASSWORD: ${ZAP_PASSWORD}
        ZAP_SECRET: ${ZAP_SECRET}
        ZAP_TOKEN: ${ZAP_TOKEN}
        # - INSTALL_DEV=true
        # - INSTALL_PYTHON=true
        # - INSTALL_NODEJS=true
        # - INSTALL_FFMPEG=true
        # - INSTALL_PYTORCH=true
        # - INSTALL_TENSORFLOW=true
        # - INSTALL_HUGGINGFACE=true
        # - INSTALL_EXTRAS=true
        # - CUDA_VERSION=11.8
        # - NODE_VERSION=22
        # - PYTHON_VERSION=3.10
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "3000:3000"
      - "8000:8000"
      - "8080:8080"
      - "5000:5000"
      - "2222:2222"
      - "9200:9200"
      - "9201:9201"
      - "9229:9229" # node debugging port
      - "9230-9239:9230-9239" # alternate node debugging ports
    volumes:
      - vortex-app:/vortex/app
      - vortex-data:/vortex/data
      - shared-models:/vortex/models
    environment:
      - NODE_ENV=development
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      # - XDG_RUNTIME_DIR=/tmp/runtime-root
      # - DISPLAY=:0  # Optional for GUI apps (WSLg)
      # - WAYLAND_DISPLAY=wayland-0

      # where to cache models & data
      - HF_HOME=/vortex/models/cache
      # - HF_DATASETS_CACHE=/vortex/models/cache/datasets
      # - HF_METRICS_CACHE=/vortex/models/cache/metrics
      # - HF_MODULES_CACHE=/vortex/models/cache/modules
      # - TRANSFORMERS_CACHE=/vortex/models/cache/transformers

      # authentication (loaded from .env)
      - HF_HUB_TOKEN=${HF_HUB_TOKEN}

      # privacy/offline settings
      - HF_HUB_DISABLE_TELEMETRY=1
      - HF_DISABLE_TELEMETRY=1
      # - HF_HUB_OFFLINE=1
      # - TRANSFORMERS_OFFLINE=1
      # - HF_DATASETS_OFFLINE=1
      # - HF_METRICS_OFFLINE=1

      # advanced Hub options (optional)
      # - HF_HUB_ENABLE_HF_TRANSFER=1
      - HF_HUB_URL=https://huggingface.co


volumes:
  vortex-app:
    driver: local
    name: vortex-app
  vortex-data:
    driver: local
    name: vortex-data
  shared-models:
    driver: local
    name: shared-models
